import { BaseCloudClient } from './BaseCloudClient';
import { ITokenConnection } from '../connection/IConnection';
import { OnMessageCallback, CloudMessageValue, IMultiPropertiesCloudClient, ITokenCloudClient } from './ICloudClient';
export declare type PropertyCallbacks = {
    cb: OnMessageCallback<any>;
    name: string;
    thingId: string;
};
export declare class MultiPropertiesCloudClient extends BaseCloudClient<ITokenConnection> implements IMultiPropertiesCloudClient, ITokenCloudClient {
    private subscriptions;
    private propertiesCbs;
    private callbacks;
    disconnect(): Promise<void>;
    getToken(): string;
    updateToken(newToken: string): Promise<void>;
    sendProperty(thingId: string, name: string, value: CloudMessageValue, tmp?: number): Promise<void>;
    onPropertyValue<T extends CloudMessageValue>(thingId: string, name: string, cb: OnMessageCallback<T>): void;
}
